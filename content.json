{"meta":{"title":"Infomatic Technique Tutorial","subtitle":"Jack Gu's personal tech-tutorial","description":"This is my personal blog to share latest techniques and theories in High-Tech field.","author":"Jack Gu","url":"https://3pigsgu.github.io/info-tech-tutorial","root":"/info-tech-tutorial/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2019-12-22T14:45:07.436Z","updated":"2019-12-22T14:45:07.436Z","comments":false,"path":"/404.html","permalink":"https://3pigsgu.github.io/info-tech-tutorial/404.html","excerpt":"","text":""},{"title":"关于","date":"2019-12-17T08:46:50.000Z","updated":"2019-12-18T10:02:03.930Z","comments":false,"path":"about/index.html","permalink":"https://3pigsgu.github.io/info-tech-tutorial/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-12-17T08:47:01.000Z","updated":"2019-12-18T06:04:12.808Z","comments":true,"path":"categories/index.html","permalink":"https://3pigsgu.github.io/info-tech-tutorial/categories/index.html","excerpt":"","text":""},{"title":"项目","date":"2019-12-17T08:47:46.000Z","updated":"2019-12-18T10:00:37.308Z","comments":false,"path":"repository/index.html","permalink":"https://3pigsgu.github.io/info-tech-tutorial/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-12-17T08:41:10.000Z","updated":"2019-12-18T05:12:16.375Z","comments":true,"path":"tags/index.html","permalink":"https://3pigsgu.github.io/info-tech-tutorial/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Tensorflow安装详解与样例Demo演示","slug":"tensorflow/tensorflow-tutorial-01","date":"2019-12-26T03:40:37.000Z","updated":"2019-12-26T16:32:46.525Z","comments":true,"path":"2019/12/26/tensorflow/tensorflow-tutorial-01/","link":"","permalink":"https://3pigsgu.github.io/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/","excerpt":"","text":"在使用Tensorflow进行机器学习之前， 我们需要在自己的机器上先安装相关的软件。我们可以安照Tensorflow官方网站上提供的步骤，一步一步的进行安装。官网上会提供多种环境下的部署方法，包括：Linux， Windows，MacOS和Docker容器等等。一般建议在容器或者Virtualenv这样的虚拟环境下进行Tensorflow的安装以及与此配套的一些第三方软件的集成。比较好的一种方式是对于生产环境可以采用Docker这类的容器进行Tensorflow的部署，而对于开发环境可以采用Conda的依赖环境进行安装。 这样可以保证不同版本之间的强依赖关系，避免依赖导致的不必要的冲突发生。 这篇文章将一步一步的带大家在Conda的依赖环境下安装Tensorflow和其周边的第三方插件， 并且演示一个使用Tensorflow的小示例。接下来，我在Windows设备上操作整个过程。 1. Minconda安装Minconda和Conda的区别在于Minconda其实就是Conda的一个子集，是Conda的一个简化安装版： 如果您选择Anaconda，可能：是conda或Python的新手，喜欢一次性安装Python和150多个科学软件包。有时间和磁盘空间-可能需要几分钟和300MB的磁盘空间。不想单独安装要使用的每个软件包。 如果您选择Miniconda，可能：不介意安装要单独使用的每个软件包。没有时间或磁盘空间来一次安装150个以上的软件包。希望快速访问Python和conda命令，并且希望以后再整理其他程序。 这里提供Miniconda安装软件的下载地址, 请依据自己的喜好和机器环境酌情选择。如果你下直接安装完整的Conda软件，也可以在这个链接下载。详细的操作文档请参见：Conda文档。 1.1. 管理Conda 通查看Conda的版本验证Conda是否安装： 1C:\\Users\\44355&gt; conda --version 或者 1C:\\Users\\44355&gt; conda -V Conda会返回版本号，例如：conda 4.8.0。 查看更详细的Conda信息： 1C:\\Users\\44355&gt; conda info Conda返回更多的安装信息，包括安装路径、Conda版本、Python版本、基础环境路径、包缓存路径等。 123456789101112131415161718192021222324252627 active environment : base active env location : D:\\software\\Miniconda3 shell level : 1 user config file : C:\\Users\\44355\\.condarcpopulated config files : C:\\Users\\44355\\.condarc conda version : 4.8.0 conda-build version : not installed python version : 3.7.3.final.0 virtual packages : base environment : D:\\software\\Miniconda3 (writable) channel URLs : https://repo.anaconda.com/pkgs/main/win-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/win-64 https://repo.anaconda.com/pkgs/r/noarch https://repo.anaconda.com/pkgs/msys2/win-64 https://repo.anaconda.com/pkgs/msys2/noarch package cache : D:\\software\\Miniconda3\\pkgs C:\\Users\\44355\\.conda\\pkgs C:\\Users\\44355\\AppData\\Local\\conda\\conda\\pkgs envs directories : D:\\software\\Miniconda3\\envs C:\\Users\\44355\\.conda\\envs C:\\Users\\44355\\AppData\\Local\\conda\\conda\\envs platform : win-64 user-agent : conda/4.8.0 requests/2.22.0 CPython/3.7.3 Windows/10 Windows/10.0.17763 administrator : False netrc file : None offline mode : False 更新Conda到最新版本： 1C:\\Users\\44355&gt; conda update conda 更多参考：Conda Management 1.2. Condad的环境管理 命令行创建一个新环境 1C:\\Users\\44355&gt; conda create --name tensorflow-env 命令行激活指定环境 1C:\\Users\\44355&gt; conda activate tensorflow-env 激活环境后所有的操作会在当前激活的环境下进行。 命令行停用当前环境 1(tensorflow-env) C:\\Users\\44355&gt; conda deactivate 更多参考：Conda Environment Management 2. 在tensorflow-env环境下进行Python安装 当我们在Conda中激活tensorflow-env环境，则出现如下提示：1(tensorflow-env) C:\\Users\\44355&gt; 此时表明当前已经进入tensorflow-env环境。 由于在安装Conda的时候其自身内嵌安装了相应的Python版本，因此我们无需再额外安装Python,就可以直接在tensorflow-env环境中安装Tensorflow。首先查看Tensorflow各个版本：1(tensorflow-env) C:\\Users\\44355&gt; conda search tensorflow 或者1(tensorflow-env) C:\\Users\\44355&gt; conda search tensorflow-gpu 选择一个安装版本进行安装：1(tensorflow-env) C:\\Users\\44355&gt; conda install tensorflow=1.8.0 或者直接安装最新版本的Tensorflow：1(tensorflow-env) C:\\Users\\44355&gt; conda install tensorflow 安装完成后验证Tensorflow是否安装成功：1234(tensorflow-env) C:\\Users\\44355&gt; python&gt;&gt;&gt; import tensorflow as tf #不报错即安装成功&gt;&gt;&gt; exit()(tensorflow-env) C:\\Users\\44355&gt; conda deactivate 更多参考：Tensorflow官方安装 3. 在tensorflow-env环境下安装常用的第三方软件3.1. 安装Jupyter1(tensorflow-env) C:\\Users\\44355&gt; pip install jupyterlab 更多参考：Jupyter官方安装 3.2. 安装matplotlib12(tensorflow-env) C:\\Users\\44355&gt; python -m pip install -U pip(tensorflow-env) C:\\Users\\44355&gt; python -m pip install -U matplotlib 更多参考：matplotlib官方安装 4. 示例代码演示TensorFlow, Jupyter Notebook, and matplotlib的使用","categories":[{"name":"Tensorflow实战","slug":"Tensorflow-Action","permalink":"https://3pigsgu.github.io/info-tech-tutorial/categories/Tensorflow-Action/"}],"tags":[{"name":"开发实战","slug":"Development-Action","permalink":"https://3pigsgu.github.io/info-tech-tutorial/tags/Development-Action/"},{"name":"开发工具","slug":"Development-Tools","permalink":"https://3pigsgu.github.io/info-tech-tutorial/tags/Development-Tools/"}]}]}