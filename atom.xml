<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Infomatic Technique Tutorial</title>
  
  <subtitle>Jack Gu&#39;s personal tech-tutorial</subtitle>
  <link href="/info-tech-tutorial/atom.xml" rel="self"/>
  
  <link href="https://3pigsgu.github.io/info-tech-tutorial/"/>
  <updated>2019-12-27T04:33:31.479Z</updated>
  <id>https://3pigsgu.github.io/info-tech-tutorial/</id>
  
  <author>
    <name>Jack Gu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tensorflow安装详解与样例Demo演示</title>
    <link href="https://3pigsgu.github.io/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/"/>
    <id>https://3pigsgu.github.io/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/</id>
    <published>2019-12-26T03:40:37.000Z</published>
    <updated>2019-12-27T04:33:31.479Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Tensorflow进行机器学习之前， 我们需要在自己的机器上先安装相关的软件。我们可以安照<a href="https://tensorflow.google.cn/install" target="_blank" rel="noopener">Tensorflow</a>官方网站上提供的步骤，一步一步的进行安装。官网上会提供多种环境下的部署方法，包括：Linux， Windows，MacOS和Docker容器等等。一般建议在容器或者Virtualenv这样的虚拟环境下进行Tensorflow的安装以及与此配套的一些第三方软件的集成。比较好的一种方式是对于生产环境可以采用<a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>这类的容器进行Tensorflow的部署，而对于开发环境可以采用<a href="https://docs.conda.io" target="_blank" rel="noopener">Conda</a>的依赖环境进行安装。 这样可以保证不同版本之间的强依赖关系，避免依赖导致的不必要的冲突发生。</p><p>这篇文章将一步一步的带大家在Conda的依赖环境下安装Tensorflow和其周边的第三方插件， 并且演示一个使用Tensorflow的小示例。接下来，我在Windows设备上操作整个过程。</p><h2 id="1-Minconda安装"><a href="#1-Minconda安装" class="headerlink" title="1. Minconda安装"></a>1. Minconda安装</h2><p>Minconda和Conda的区别在于Minconda其实就是Conda的一个子集，是Conda的一个简化安装版：</p><p>如果您选择Anaconda，可能：<br>是conda或Python的新手，喜欢一次性安装Python和150多个科学软件包。<br>有时间和磁盘空间-可能需要几分钟和300MB的磁盘空间。<br>不想单独安装要使用的每个软件包。</p><p>如果您选择Miniconda，可能：<br>不介意安装要单独使用的每个软件包。<br>没有时间或磁盘空间来一次安装150个以上的软件包。<br>希望快速访问Python和conda命令，并且希望以后再整理其他程序。</p><p>这里提供Miniconda安装软件的<a href="https://docs.conda.io/en/latest/miniconda.html#other-resources" target="_blank" rel="noopener">下载地址</a>, 请依据自己的喜好和机器环境酌情选择。如果你下直接安装完整的Conda软件，也可以在这个链接<a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">下载</a>。<br>详细的操作文档请参见：<a href="https://docs.conda.io/projects/conda/en/latest/index.html" target="_blank" rel="noopener">Conda文档</a>。</p><h3 id="1-1-管理Conda"><a href="#1-1-管理Conda" class="headerlink" title="1.1. 管理Conda"></a>1.1. 管理Conda</h3><ul><li><p>通查看Conda的版本验证Conda是否安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda --version</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda -V</span><br></pre></td></tr></table></figure><p>Conda会返回版本号，例如：conda 4.8.0。</p></li><li><p>查看更详细的Conda信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda info</span><br></pre></td></tr></table></figure><p>Conda返回更多的安装信息，包括安装路径、Conda版本、Python版本、基础环境路径、包缓存路径等。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    active environment : base</span><br><span class="line">   active env location : D:\software\Miniconda3</span><br><span class="line">           shell level : 1</span><br><span class="line">      user config file : C:\Users\44355\.condarc</span><br><span class="line">populated config files : C:\Users\44355\.condarc</span><br><span class="line">         conda version : 4.8.0</span><br><span class="line">   conda-build version : not installed</span><br><span class="line">        python version : 3.7.3.final.0</span><br><span class="line">      virtual packages :</span><br><span class="line">      base environment : D:\software\Miniconda3  (writable)</span><br><span class="line">          channel URLs : https://repo.anaconda.com/pkgs/main/win-64</span><br><span class="line">                         https://repo.anaconda.com/pkgs/main/noarch</span><br><span class="line">                         https://repo.anaconda.com/pkgs/r/win-64</span><br><span class="line">                         https://repo.anaconda.com/pkgs/r/noarch</span><br><span class="line">                         https://repo.anaconda.com/pkgs/msys2/win-64</span><br><span class="line">                         https://repo.anaconda.com/pkgs/msys2/noarch</span><br><span class="line">         package cache : D:\software\Miniconda3\pkgs</span><br><span class="line">                         C:\Users\44355\.conda\pkgs</span><br><span class="line">                         C:\Users\44355\AppData\Local\conda\conda\pkgs</span><br><span class="line">      envs directories : D:\software\Miniconda3\envs</span><br><span class="line">                         C:\Users\44355\.conda\envs</span><br><span class="line">                         C:\Users\44355\AppData\Local\conda\conda\envs</span><br><span class="line">              platform : win-64</span><br><span class="line">            user-agent : conda/4.8.0 requests/2.22.0 CPython/3.7.3 Windows/10 Windows/10.0.17763</span><br><span class="line">         administrator : False</span><br><span class="line">            netrc file : None</span><br><span class="line">          offline mode : False</span><br></pre></td></tr></table></figure></li><li><p>更新Conda到最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda update conda</span><br></pre></td></tr></table></figure><p>更多参考：<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-conda.html" target="_blank" rel="noopener">Conda Management</a></p></li></ul><h3 id="1-2-Conda的环境管理"><a href="#1-2-Conda的环境管理" class="headerlink" title="1.2. Conda的环境管理"></a>1.2. Conda的环境管理</h3><ul><li><p>命令行创建一个新环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda create --name tensorflow-env</span><br></pre></td></tr></table></figure></li><li><p>命令行激活指定环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\44355&gt; conda activate tensorflow-env</span><br></pre></td></tr></table></figure><p>激活环境后所有的操作会在当前激活的环境下进行。</p></li><li><p>命令行停用当前环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; conda deactivate</span><br></pre></td></tr></table></figure><p>更多参考：<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html" target="_blank" rel="noopener">Conda Environment Management</a></p></li></ul><h2 id="2-在tensorflow-env环境下进行Python安装"><a href="#2-在tensorflow-env环境下进行Python安装" class="headerlink" title="2. 在tensorflow-env环境下进行Python安装"></a>2. 在tensorflow-env环境下进行Python安装</h2><ul><li>当我们在Conda中激活tensorflow-env环境，则出现如下提示：<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt;</span><br></pre></td></tr></table></figure>此时表明当前已经进入tensorflow-env环境。</li></ul><ul><li>由于在安装Conda的时候其自身内嵌安装了相应的Python版本，因此我们无需再额外安装Python,就可以直接在tensorflow-env环境中安装Tensorflow。<br>首先查看Tensorflow各个版本：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; conda search tensorflow</span><br></pre></td></tr></table></figure>或者<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; conda search tensorflow-gpu</span><br></pre></td></tr></table></figure>选择一个安装版本进行安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; conda install tensorflow=1.8.0</span><br></pre></td></tr></table></figure>或者直接安装最新版本的Tensorflow：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; conda install tensorflow</span><br></pre></td></tr></table></figure></li></ul><ul><li>安装完成后验证Tensorflow是否安装成功：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; python</span><br><span class="line">&gt;&gt;&gt; import tensorflow as tf  <span class="comment">#不报错即安装成功</span></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br><span class="line">(tensorflow-env) C:\Users\44355&gt; conda deactivate</span><br></pre></td></tr></table></figure>更多参考：<a href="https://tensorflow.google.cn/install" target="_blank" rel="noopener">Tensorflow官方安装</a></li></ul><h2 id="3-在tensorflow-env环境下安装常用的第三方软件"><a href="#3-在tensorflow-env环境下安装常用的第三方软件" class="headerlink" title="3. 在tensorflow-env环境下安装常用的第三方软件"></a>3. 在tensorflow-env环境下安装常用的第三方软件</h2><h3 id="3-1-安装Jupyter"><a href="#3-1-安装Jupyter" class="headerlink" title="3.1. 安装Jupyter"></a>3.1. 安装Jupyter</h3><ul><li><p>Jupyter是一款为了开发跨多种编程语言的交互式计算的开源软件，它提供开放的标准和服务。<br>JupyterLab是用于Jupyter笔记本，代码和数据的基于Web的交互式开发环境。 JupyterLab非常灵活：配置和安排用户界面以支持数据科学，科学计算和机器学习中的各种工作流程。 JupyterLab是可扩展的和模块化的：编写可添加新组件并与现有组件集成的插件。接下来我们通过pip命令来安装JupyterLab。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; pip install jupyterlab</span><br></pre></td></tr></table></figure><p>更多参考：<a href="https://jupyter.org/install" target="_blank" rel="noopener">Jupyter官方安装</a></p></li><li><p>Jupyter Notebook是Jupyter中的一个开源Web应用程序，允许您创建和共享包含实时代码，方程式，可视化效果和叙述文本的文档。用途包括：数据清理和转换，数值模拟，统计建模，数据可视化，机器学习等。我们可以通过命令来启动Jupyter Notebook服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; jupyter notebook</span><br></pre></td></tr></table></figure><p>终端上会打印如下启动信息：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[I 10:20:26.155 NotebookApp] Serving notebooks from local directory: C:\Users\44355</span><br><span class="line">[I 10:20:26.160 NotebookApp] The Jupyter Notebook is running at:</span><br><span class="line">[I 10:20:26.161 NotebookApp] http://localhost:8888/?token=00f06b6e31b020740277e2d20eef416da634cc55d6f6a2ba</span><br><span class="line">[I 10:20:26.162 NotebookApp]  or http://127.0.0.1:8888/?token=00f06b6e31b020740277e2d20eef416da634cc55d6f6a2ba</span><br><span class="line">[I 10:20:26.162 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span><br><span class="line">[C 10:20:26.406 NotebookApp]</span><br><span class="line"></span><br><span class="line">    To access the notebook, open this file in a browser:</span><br><span class="line">        file:///C:/Users/44355/AppData/Roaming/jupyter/runtime/nbserver-138920-open.html</span><br><span class="line">    Or copy and paste one of these URLs:</span><br><span class="line">        http://localhost:8888/?token=00f06b6e31b020740277e2d20eef416da634cc55d6f6a2ba</span><br><span class="line">     or http://127.0.0.1:8888/?token=00f06b6e31b020740277e2d20eef416da634cc55d6f6a2ba</span><br></pre></td></tr></table></figure><p>接下来会自动打开浏览器进入Jupyter Notebook操作界面：</p><img src="/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/Jupyter_Notebook_Interface.png" class="" title="Jupyter Notebook操作界面"><p>更多参考：<a href="https://jupyter.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">Jupyter官方文档</a></p></li></ul><h3 id="3-2-安装Matplotlib"><a href="#3-2-安装Matplotlib" class="headerlink" title="3.2. 安装Matplotlib"></a>3.2. 安装Matplotlib</h3><p>Matplotlib是一个Python 2D绘图库，它以多种硬拷贝格式和跨平台的交互式环境生成出版物质量的图形。 Matplotlib可用于Python脚本，Python和IPython Shell，Jupyter Notebook，Web应用程序服务器和四个图形用户界面工具包。<br>接下来我们通过Python来安装Matplotlib插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow-env) C:\Users\44355&gt; python -m pip install -U pip</span><br><span class="line">(tensorflow-env) C:\Users\44355&gt; python -m pip install -U matplotlib</span><br></pre></td></tr></table></figure><p>更多参考：<a href="https://matplotlib.org/users/installing.html" target="_blank" rel="noopener">Matplotlib官方安装</a><br>现在我们只需几行代码就可以生成图表，直方图，功率谱，条形图，误差图，散点图等。</p><h2 id="4-示例代码演示TensorFlow-Jupyter-Notebook-and-Matplotlib的使用"><a href="#4-示例代码演示TensorFlow-Jupyter-Notebook-and-Matplotlib的使用" class="headerlink" title="4. 示例代码演示TensorFlow, Jupyter Notebook, and Matplotlib的使用"></a>4. 示例代码演示TensorFlow, Jupyter Notebook, and Matplotlib的使用</h2><p>接下来，我们在Jupyter Notebook界面中写一段很简单的演示代码。<br>首先我们在Jupyter Notebook操作界面的右上角单击<font style=" border:1px solid; -moz-border-radius:5px; -webkit-border-radius:5px; border-radius:5px; background-color: #F8F8F8;"> new </font>按钮，然后选择Python版本，这边选择的是安装Conda时自带的Python3.</p><img src="/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/Jupyter_Edit_1.png" class=""><p>进入代码操作界面后，可以把默认代码文件名Untitled修改成自己定义的名字，这里修改成“My First Notebook”。</p><img src="/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/Jupyter_Edit_2.png" class=""><p>然后我们在代码块区域输入如下示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br><span class="line">a = tf.random_normal([<span class="number">2</span>,<span class="number">20</span>])</span><br><span class="line">sess = tf.Session()</span><br><span class="line">out = sess.run(a)</span><br><span class="line">x, y = out</span><br><span class="line">plt.scatter(x, y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>代码中tf.random_normal()函数用于从服从指定正太分布的数值中取出指定个数的值。 shape=[2,20]是输出张量的形状，一个2行20列的矩阵。然后tensorflow运行计算后的输出按行分别传给x和y两个变量。最后以Matplotlib的scatter散点图的方式图形化展示，其中x代表横轴值，y代表纵轴值。<br>代码可以分成多个代码块，代码块可以通过左上角<font style=" border:1px solid; -moz-border-radius:5px; -webkit-border-radius:5px; border-radius:5px; background-color: #F8F8F8;"> + </font>号增加，最终完成界面如下：</p><img src="/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/Jupyter_Edit_3.png" class=""><p>完成Python示例代码后，可以点击<font style=" border:1px solid; -moz-border-radius:5px; -webkit-border-radius:5px; border-radius:5px; background-color: #F8F8F8;"> Run </font>按钮逐步执行代码块，这里代码调用tensorflow正太分布算法，最终结果会使用Matplotlib去直观的展示20个点的随机正太分布情况。</p><img src="/info-tech-tutorial/2019/12/26/tensorflow/tensorflow-tutorial-01/Jupyter_Edit_4.png" class=""><h2 id="4-结语"><a href="#4-结语" class="headerlink" title="4. 结语"></a>4. 结语</h2><p>至此整个Tensorflow的安装详解和示例代码演示到此结束，如果需要了解更多的相关细节，请阅读本文中提供的更多的官方链接。如有疑问欢迎大家留言！欢迎来踩留印！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用Tensorflow进行机器学习之前， 我们需要在自己的机器上先安装相关的软件。我们可以安照&lt;a href=&quot;https://tensorflow.google.cn/install&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tensorflow
      
    
    </summary>
    
    
      <category term="Tensorflow实战" scheme="https://3pigsgu.github.io/info-tech-tutorial/categories/Tensorflow-Action/"/>
    
    
      <category term="开发实战" scheme="https://3pigsgu.github.io/info-tech-tutorial/tags/Development-Action/"/>
    
      <category term="开发工具" scheme="https://3pigsgu.github.io/info-tech-tutorial/tags/Development-Tools/"/>
    
  </entry>
  
</feed>
